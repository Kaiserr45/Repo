using System.Text.Json.Serialization;

namespace IngoX.Client.Bff.Core.Models.External;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 649 // Disable "CS0649 Field is never assigned to, and will always have its default value null"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8600 // Disable "CS8600 Converting null literal or possible null value to non-nullable type"
#pragma warning disable 8602 // Disable "CS8602 Dereference of a possibly null reference"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"
#pragma warning disable 8765 // Disable "CS8765 Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes)."

// ----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
// --
using System = global::System;

/// <summary>
/// VIP.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StateRegistrationPersonDataVm
{
    /// <summary>
    /// ИНН.
    /// </summary>

    [JsonPropertyName("inn")]
    public string Inn { get; set; }

    /// <summary>
    /// СНИЛС.
    /// </summary>

    [JsonPropertyName("snilsCode")]
    public string SnilsCode { get; set; }

    /// <summary>
    /// ОГРНИП.
    /// </summary>

    [JsonPropertyName("ogrnIp")]
    public string OgrnIp { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Пол клиента.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class GenderVm
{
    /// <summary>
    /// ISN типа (по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    /// <summary>
    /// Наименование типа(по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Семейное положение.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class FamilyStateVm
{
    /// <summary>
    /// Код.
    /// </summary>

    [JsonPropertyName("code")]
    public string Code { get; set; }

    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// VIP.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class RegionalVipInfoVm
{
    /// <summary>
    /// Персональный менеджер.
    /// </summary>

    [JsonPropertyName("personalManagerName")]
    public string PersonalManagerName { get; set; }

    /// <summary>
    /// Телефон персонального менеджера.
    /// </summary>

    [JsonPropertyName("personalManagerPhone")]
    public string PersonalManagerPhone { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// организационно-правовая форма.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class LegalFormVm
{
    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Файл.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DocumentKitFileVm
{
    /// <summary>
    /// File name.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Номер страницы.
    /// </summary>

    [JsonPropertyName("pageNumber")]
    public int? PageNumber { get; set; }

    /// <summary>
    /// Имя пользователя.
    /// </summary>

    [JsonPropertyName("userName")]
    public string UserName { get; set; }

    /// <summary>
    /// Размер.
    /// </summary>

    [JsonPropertyName("size")]
    public int? Size { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Пакет документов.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DocumentKitPackageVm
{
    /// <summary>
    /// ISN документа.
    /// </summary>

    [JsonPropertyName("documentIsn")]
    public string DocumentIsn { get; set; }

    /// <summary>
    /// Список файлов документа.
    /// </summary>

    [JsonPropertyName("files")]
    public ICollection<DocumentKitFileVm> Files { get; set; }

    /// <summary>
    /// ISN типа (по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    /// <summary>
    /// Наименование типа(по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Документ.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DocumentVm
{
    /// <summary>
    /// Номер.
    /// </summary>

    [JsonPropertyName("number")]
    public string Number { get; set; }

    /// <summary>
    /// Серия.
    /// </summary>

    [JsonPropertyName("series")]
    public string Series { get; set; }

    /// <summary>
    /// Дата выдачи.
    /// </summary>

    [JsonPropertyName("dateIssue")]
    public System.DateTimeOffset? DateIssue { get; set; }

    /// <summary>
    /// Кем выдан.
    /// </summary>

    [JsonPropertyName("issueAuthority")]
    public string IssueAuthority { get; set; }

    [JsonPropertyName("documentKitPackage")]
    public DocumentKitPackageVm DocumentKitPackage { get; set; }

    /// <summary>
    /// ISN типа (по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    /// <summary>
    /// Наименование типа(по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Категория ВУ.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DrivingCategoryVm
{
    /// <summary>
    /// Наименование категории.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Дата начала стажа для категории.
    /// </summary>

    [JsonPropertyName("startDate")]
    public System.DateTimeOffset StartDate { get; set; }

    /// <summary>
    /// Isn категории.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Идентификатор в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ContactVm
{

    [JsonPropertyName("value")]
    public string Value { get; set; }

    [JsonPropertyName("isActual")]
    public bool IsActual { get; set; }

    [JsonPropertyName("isVerified")]
    public bool IsVerified { get; set; }

    [JsonPropertyName("isHidden")]
    public bool IsHidden { get; set; }

    /// <summary>
    /// ISN типа (по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    /// <summary>
    /// Наименование типа(по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Страна.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class CountryVm
{
    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Код ISO.
    /// </summary>

    [JsonPropertyName("codeIso")]
    public string CodeIso { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Город, населенный пункт.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class CityVm
{
    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Наименование с учетом региона.
    /// </summary>

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    /// <summary>
    /// КЛАДР.
    /// </summary>

    [JsonPropertyName("cityCode")]
    public string CityCode { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Регион.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class RegionVm
{
    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Наименование с учетом типа региона.
    /// </summary>

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    /// <summary>
    /// Наименование типа региона (например: край, респ и т.д.)
    /// </summary>

    [JsonPropertyName("regionType")]
    public string RegionType { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Поселение.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SettlementVm
{
    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Наименование с учетом типа поселения.
    /// </summary>

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    /// <summary>
    /// Наименование типа поселения (например: ст-ца и др.).
    /// </summary>

    [JsonPropertyName("settlementType")]
    public string SettlementType { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Район.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DistrictVm
{
    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Наименование с учетом типа района.
    /// </summary>

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    /// <summary>
    /// Наименование типа района (например: р-н).
    /// </summary>

    [JsonPropertyName("districtType")]
    public string DistrictType { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Улица.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StreetVm
{
    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Проспект, переулок, улица и пр.
    /// </summary>

    [JsonPropertyName("prefix")]
    public string Prefix { get; set; }

    /// <summary>
    /// Наименование.
    /// </summary>

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    /// <summary>
    /// КЛАДР.
    /// </summary>

    [JsonPropertyName("streetCode")]
    public string StreetCode { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Адрес.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AddressVm
{

    [JsonPropertyName("country")]
    public CountryVm Country { get; set; }

    /// <summary>
    /// Индекс.
    /// </summary>

    [JsonPropertyName("zipCode")]
    public string ZipCode { get; set; }

    [JsonPropertyName("city")]
    public CityVm City { get; set; }

    [JsonPropertyName("region")]
    public RegionVm Region { get; set; }

    [JsonPropertyName("settlement")]
    public SettlementVm Settlement { get; set; }

    [JsonPropertyName("district")]
    public DistrictVm District { get; set; }

    [JsonPropertyName("street")]
    public StreetVm Street { get; set; }

    /// <summary>
    /// Дом.
    /// </summary>

    [JsonPropertyName("building")]
    public string Building { get; set; }

    /// <summary>
    /// Подъезд.
    /// </summary>

    [JsonPropertyName("house")]
    public string House { get; set; }

    /// <summary>
    /// Квартира.
    /// </summary>

    [JsonPropertyName("flat")]
    public string Flat { get; set; }

    /// <summary>
    /// Подъезд.
    /// </summary>

    [JsonPropertyName("block")]
    public string Block { get; set; }

    /// <summary>
    /// Полный адрес.
    /// </summary>

    [JsonPropertyName("fullAddress")]
    public string FullAddress { get; set; }

    /// <summary>
    /// ISN типа (по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    /// <summary>
    /// Наименование типа(по идее из DICTI надо разбираться).
    /// </summary>

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class CategoryVm
{

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("shortName")]
    public string ShortName { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ClientMessageVm
{

    [JsonPropertyName("canEdit")]
    public bool CanEdit { get; set; }

    [JsonPropertyName("canDelete")]
    public bool CanDelete { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("objIsn")]
    public string ObjIsn { get; set; }

    [JsonPropertyName("messageText")]
    public string MessageText { get; set; }

    [JsonPropertyName("isCritical")]
    public bool IsCritical { get; set; }

    [JsonPropertyName("vFormIsn")]
    public string VFormIsn { get; set; }

    [JsonPropertyName("senderName")]
    public string SenderName { get; set; }

    [JsonPropertyName("sendDate")]
    public System.DateTimeOffset SendDate { get; set; }

    [JsonPropertyName("owner")]
    public string Owner { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ClientMessagesInfoVm
{

    [JsonPropertyName("messages")]
    public ICollection<ClientMessageVm> Messages { get; set; }

    [JsonPropertyName("infoMessagesCount")]
    public int InfoMessagesCount { get; set; }

    [JsonPropertyName("criticalMessagesCount")]
    public int CriticalMessagesCount { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

/// <summary>
/// Физическое лицо, предприниматель.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ViewPersonItemVm
{

    [JsonPropertyName("stateRegistrationData")]
    public StateRegistrationPersonDataVm StateRegistrationData { get; set; }

    /// <summary>
    /// День рождения.
    /// </summary>

    [JsonPropertyName("birthDay")]
    public System.DateTimeOffset? BirthDay { get; set; }

    [JsonPropertyName("gender")]
    public GenderVm Gender { get; set; }

    [JsonPropertyName("familyState")]
    public FamilyStateVm FamilyState { get; set; }

    /// <summary>
    /// Количество детей.
    /// </summary>

    [JsonPropertyName("childrenCount")]
    public int? ChildrenCount { get; set; }

    /// <summary>
    /// Индивидуальный предпрениматель.
    /// </summary>

    [JsonPropertyName("isIndividual")]
    public bool? IsIndividual { get; set; }

    /// <summary>
    /// Цвет ценности клиента.
    /// </summary>

    [JsonPropertyName("clientDirectivityColor")]
    public int? ClientDirectivityColor { get; set; }

    /// <summary>
    /// Показатель ценности клиента.
    /// </summary>

    [JsonPropertyName("clientValue")]
    public double? ClientValue { get; set; }

    /// <summary>
    /// Сумма клиентоориентированного решения.
    /// </summary>

    [JsonPropertyName("sumClientDir")]
    public double? SumClientDir { get; set; }

    /// <summary>
    /// Признак VIP.
    /// </summary>

    [JsonPropertyName("isRegionalVip")]
    public bool? IsRegionalVip { get; set; }

    [JsonPropertyName("regionalVipInfo")]
    public RegionalVipInfoVm RegionalVipInfo { get; set; }

    [JsonPropertyName("legalForm")]
    public LegalFormVm LegalForm { get; set; }

    /// <summary>
    /// Исн класса.
    /// </summary>

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    /// <summary>
    /// Client card class Name.
    /// </summary>

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    [JsonPropertyName("isClientClass")]
    public bool? IsClientClass { get; set; }

    /// <summary>
    /// Полное наименование.
    /// </summary>

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    /// <summary>
    /// Краткое наименование.
    /// </summary>

    [JsonPropertyName("shortName")]
    public string ShortName { get; set; }

    /// <summary>
    /// Список документов.
    /// </summary>

    [JsonPropertyName("documentList")]
    public ICollection<DocumentVm> DocumentList { get; set; }

    /// <summary>
    /// Список категорий ВУ.
    /// </summary>

    [JsonPropertyName("categoryList")]
    public ICollection<DrivingCategoryVm> CategoryList { get; set; }

    /// <summary>
    /// Список контактов.
    /// </summary>

    [JsonPropertyName("contactList")]
    public ICollection<ContactVm> ContactList { get; set; }

    /// <summary>
    /// Список адресов.
    /// </summary>

    [JsonPropertyName("addressList")]
    public ICollection<AddressVm> AddressList { get; set; }

    /// <summary>
    /// Признак резидента.
    /// </summary>

    [JsonPropertyName("isResident")]
    public bool? IsResident { get; set; }

    [JsonPropertyName("residentCountry")]
    public CountryVm ResidentCountry { get; set; }

    [JsonPropertyName("currentCategory")]
    public CategoryVm CurrentCategory { get; set; }

    /// <summary>
    /// Наименование на латинице.
    /// </summary>

    [JsonPropertyName("latinName")]
    public string LatinName { get; set; }

    [JsonPropertyName("clientMessagesInfo")]
    public ClientMessagesInfoVm ClientMessagesInfo { get; set; }

    /// <summary>
    /// ISN записи.
    /// </summary>

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    /// <summary>
    /// Дата последнего обновления.
    /// </summary>

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    /// <summary>
    /// Id в MDM.
    /// </summary>

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ValidationResult
{

    [JsonPropertyName("errorCode")]
    public string ErrorCode { get; set; }

    [JsonPropertyName("message")]
    public string Message { get; set; }

    [JsonPropertyName("source")]
    public string Source { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PlatformError
{

    [JsonPropertyName("code")]
    public string Code { get; set; }

    [JsonPropertyName("eventId")]
    public string EventId { get; set; }

    [JsonPropertyName("status")]
    public int? Status { get; set; }

    [JsonPropertyName("detail")]
    public string Detail { get; set; }

    [JsonPropertyName("errors")]
    public ICollection<ValidationResult> Errors { get; set; }

    [JsonPropertyName("data")]
    public IDictionary<string, object> Data { get; set; }

    [JsonPropertyName("message")]
    public string Message { get; set; }

    [JsonPropertyName("stackTrace")]
    public string StackTrace { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class RegionalVipInfo
{

    [JsonPropertyName("personalManagerName")]
    public string PersonalManagerName { get; set; }

    [JsonPropertyName("personalManagerPhone")]
    public string PersonalManagerPhone { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SearchPersonItem
{

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("birthDate")]
    public System.DateTime? BirthDate { get; set; }

    [JsonPropertyName("passportNumber")]
    public string PassportNumber { get; set; }

    [JsonPropertyName("addressCity")]
    public string AddressCity { get; set; }

    [JsonPropertyName("isVip")]
    public bool IsVip { get; set; }

    [JsonPropertyName("isRegionalVip")]
    public bool IsRegionalVip { get; set; }

    [JsonPropertyName("regionalVipInfo")]
    public RegionalVipInfo RegionalVipInfo { get; set; }

    [JsonPropertyName("personalManagerPhone")]
    public string PersonalManagerPhone { get; set; }

    [JsonPropertyName("isEmployee")]
    public bool IsEmployee { get; set; }

    [JsonPropertyName("vehicleCount")]
    public int? VehicleCount { get; set; }

    [JsonPropertyName("estateCount")]
    public int? EstateCount { get; set; }

    [JsonPropertyName("insuredCount")]
    public int? InsuredCount { get; set; }

    [JsonPropertyName("classISN")]
    public string ClassISN { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AdvancedSearchPersonItem
{

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("birthDate")]
    public System.DateTimeOffset? BirthDate { get; set; }

    [JsonPropertyName("passportNumber")]
    public string PassportNumber { get; set; }

    [JsonPropertyName("addressCity")]
    public string AddressCity { get; set; }

    [JsonPropertyName("isVip")]
    public bool IsVip { get; set; }

    [JsonPropertyName("isEmployee")]
    public bool IsEmployee { get; set; }

    [JsonPropertyName("vehicleCount")]
    public int? VehicleCount { get; set; }

    [JsonPropertyName("estateCount")]
    public int? EstateCount { get; set; }

    [JsonPropertyName("insuredCount")]
    public int? InsuredCount { get; set; }

    [JsonPropertyName("classISN")]
    public string ClassISN { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    [JsonPropertyName("isRegionalVip")]
    public bool IsRegionalVip { get; set; }

    [JsonPropertyName("regionalVipInfo")]
    public RegionalVipInfo RegionalVipInfo { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StateRegistrationPersonData
{

    [JsonPropertyName("inn")]
    public string Inn { get; set; }

    [JsonPropertyName("snilsCode")]
    public string SnilsCode { get; set; }

    [JsonPropertyName("ogrnIp")]
    public string OgrnIp { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Gender
{

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class FamilyState
{

    [JsonPropertyName("code")]
    public string Code { get; set; }

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class LegalForm
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DocumentKitFile
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("pageNumber")]
    public int? PageNumber { get; set; }

    [JsonPropertyName("userName")]
    public string UserName { get; set; }

    [JsonPropertyName("size")]
    public int? Size { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DocumentKitPackage
{

    [JsonPropertyName("documentIsn")]
    public string DocumentIsn { get; set; }

    [JsonPropertyName("files")]
    public ICollection<DocumentKitFile> Files { get; set; }

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Document
{

    [JsonPropertyName("number")]
    public string Number { get; set; }

    [JsonPropertyName("series")]
    public string Series { get; set; }

    [JsonPropertyName("dateIssue")]
    public System.DateTimeOffset? DateIssue { get; set; }

    [JsonPropertyName("issueAuthority")]
    public string IssueAuthority { get; set; }

    [JsonPropertyName("issueDepartmentCode")]
    public string IssueDepartmentCode { get; set; }

    [JsonPropertyName("qualifierType")]
    public int QualifierType { get; set; }

    [JsonPropertyName("drivingExperienceFrom")]
    public System.DateTimeOffset? DrivingExperienceFrom { get; set; }

    [JsonPropertyName("shouldHasSerealAndNumber")]
    public bool ShouldHasSerealAndNumber { get; set; }

    [JsonPropertyName("documentKitPackage")]
    public DocumentKitPackage DocumentKitPackage { get; set; }

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DrivingCategory
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("startDate")]
    public System.DateTimeOffset StartDate { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Contact
{

    [JsonPropertyName("value")]
    public string Value { get; set; }

    [JsonPropertyName("isActual")]
    public bool IsActual { get; set; }

    [JsonPropertyName("isVerified")]
    public bool IsVerified { get; set; }

    [JsonPropertyName("isHidden")]
    public bool IsHidden { get; set; }

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Country
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("codeIso")]
    public string CodeIso { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class City
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("cityCode")]
    public string CityCode { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Region
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("regionType")]
    public string RegionType { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Settlement
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("settlementType")]
    public string SettlementType { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class District
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("districtType")]
    public string DistrictType { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Street
{

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("prefix")]
    public string Prefix { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("streetCode")]
    public string StreetCode { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Address
{

    [JsonPropertyName("country")]
    public Country Country { get; set; }

    [JsonPropertyName("zipCode")]
    public string ZipCode { get; set; }

    [JsonPropertyName("city")]
    public City City { get; set; }

    [JsonPropertyName("region")]
    public Region Region { get; set; }

    [JsonPropertyName("settlement")]
    public Settlement Settlement { get; set; }

    [JsonPropertyName("district")]
    public District District { get; set; }

    [JsonPropertyName("street")]
    public Street Street { get; set; }

    [JsonPropertyName("building")]
    public string Building { get; set; }

    [JsonPropertyName("house")]
    public string House { get; set; }

    [JsonPropertyName("flat")]
    public string Flat { get; set; }

    [JsonPropertyName("block")]
    public string Block { get; set; }

    [JsonPropertyName("fullAddress")]
    public string FullAddress { get; set; }

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Category
{

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("shortName")]
    public string ShortName { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ClientMessage
{

    [JsonPropertyName("canEdit")]
    public bool CanEdit { get; set; }

    [JsonPropertyName("canDelete")]
    public bool CanDelete { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("objIsn")]
    public string ObjIsn { get; set; }

    [JsonPropertyName("messageText")]
    public string MessageText { get; set; }

    [JsonPropertyName("isCritical")]
    public bool IsCritical { get; set; }

    [JsonPropertyName("vFormIsn")]
    public string VFormIsn { get; set; }

    [JsonPropertyName("senderName")]
    public string SenderName { get; set; }

    [JsonPropertyName("sendDate")]
    public System.DateTimeOffset SendDate { get; set; }

    [JsonPropertyName("owner")]
    public string Owner { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ClientMessagesInfo
{

    [JsonPropertyName("messages")]
    public ICollection<ClientMessage> Messages { get; set; }

    [JsonPropertyName("infoMessagesCount")]
    public int InfoMessagesCount { get; set; }

    [JsonPropertyName("criticalMessagesCount")]
    public int CriticalMessagesCount { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ViewPersonItem
{

    [JsonPropertyName("stateRegistrationData")]
    public StateRegistrationPersonData StateRegistrationData { get; set; }

    [JsonPropertyName("birthDay")]
    public System.DateTimeOffset? BirthDay { get; set; }

    [JsonPropertyName("gender")]
    public Gender Gender { get; set; }

    [JsonPropertyName("familyState")]
    public FamilyState FamilyState { get; set; }

    [JsonPropertyName("childrenCount")]
    public int? ChildrenCount { get; set; }

    [JsonPropertyName("isIndividual")]
    public bool? IsIndividual { get; set; }

    [JsonPropertyName("clientDirectivityColor")]
    public int? ClientDirectivityColor { get; set; }

    [JsonPropertyName("clientValue")]
    public double? ClientValue { get; set; }

    [JsonPropertyName("sumClientDir")]
    public double? SumClientDir { get; set; }

    [JsonPropertyName("isRegionalVip")]
    public bool? IsRegionalVip { get; set; }

    [JsonPropertyName("regionalVipInfo")]
    public RegionalVipInfo RegionalVipInfo { get; set; }

    [JsonPropertyName("legalForm")]
    public LegalForm LegalForm { get; set; }

    [JsonPropertyName("vehicleCount")]
    public int? VehicleCount { get; set; }

    [JsonPropertyName("estateCount")]
    public int? EstateCount { get; set; }

    [JsonPropertyName("insuredCount")]
    public int? InsuredCount { get; set; }

    [JsonPropertyName("classIsn")]
    public string ClassIsn { get; set; }

    [JsonPropertyName("className")]
    public string ClassName { get; set; }

    [JsonPropertyName("isClientClass")]
    public bool? IsClientClass { get; set; }

    [JsonPropertyName("fullName")]
    public string FullName { get; set; }

    [JsonPropertyName("shortName")]
    public string ShortName { get; set; }

    [JsonPropertyName("documentList")]
    public ICollection<Document> DocumentList { get; set; }

    [JsonPropertyName("categoryList")]
    public ICollection<DrivingCategory> CategoryList { get; set; }

    [JsonPropertyName("contactList")]
    public ICollection<Contact> ContactList { get; set; }

    [JsonPropertyName("addressList")]
    public ICollection<Address> AddressList { get; set; }

    [JsonPropertyName("isResident")]
    public bool? IsResident { get; set; }

    [JsonPropertyName("residentCountry")]
    public Country ResidentCountry { get; set; }

    [JsonPropertyName("currentCategory")]
    public Category CurrentCategory { get; set; }

    [JsonPropertyName("latinName")]
    public string LatinName { get; set; }

    [JsonPropertyName("clientMessagesInfo")]
    public ClientMessagesInfo ClientMessagesInfo { get; set; }

    [JsonPropertyName("isn")]
    public string Isn { get; set; }

    [JsonPropertyName("updateDate")]
    public System.DateTimeOffset? UpdateDate { get; set; }

    [JsonPropertyName("mdmId")]
    public string MdmId { get; set; }

    private IDictionary<string, object> _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

#pragma warning restore 108
#pragma warning restore 114
#pragma warning restore 472
#pragma warning restore 612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8600
#pragma warning restore 8602
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625