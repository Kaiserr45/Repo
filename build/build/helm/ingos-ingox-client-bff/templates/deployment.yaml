# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.fullname" . }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
{{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  minReadySeconds: {{ .Values.minReadySeconds | default 0 }}
  selector:
    matchLabels:
      {{- include "application.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "application.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ include "application.fullname" . }}-pullsecret
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "application.selectorLabels" . | nindent 14 }}
      terminationGracePeriodSeconds: 30
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.app.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          env:
            {{- range $var, $val := .Values.app.env }}
            - name: {{ $var }}
              value: {{ $val | quote }}
            {{- end }}
            - name: Vault__RoleID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: vaultRoleId
            - name: VAULT_SECRET_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: vaultSecretId
          ports:
            - name: http
              containerPort: 9001
              protocol: TCP
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
          readinessProbe:
            httpGet:
              path:  /api/ingox-client-bff/v1/hc
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /api/ingox-client-bff/v1/hc
              port: http
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
      volumes:
        - name: tmp-volume
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}